#include <iostream>
#include <vector>
#include <climits>

int coinChange(std::vector<int>& coins, int amount) {
    std::vector<int> dp(amount + 1, INT_MAX);
    dp[0] = 0; // 0 coins needed to make amount 0

    for (int coin : coins) {
        for (int x = coin; x <= amount; x++) {
            if (dp[x - coin] != INT_MAX) {
                dp[x] = std::min(dp[x], dp[x - coin] + 1);
            }
        }
    }

    return (dp[amount] == INT_MAX) ? -1 : dp[amount];
}

int main() {
    int n; // Number of coin denominations
    std::cout << "Enter the number of coin denominations: ";
    std::cin >> n;
    
    std::vector<int> coins(n);
    std::cout << "Enter the coin denominations: ";
    for (int i = 0; i < n; i++) {
        std::cin >> coins[i];
    }

    int amount;
    std::cout << "Enter the amount: ";
    std::cin >> amount;

    int minCoins = coinChange(coins, amount);
    if (minCoins == -1) {
        std::cout << "It's not possible to make up the amount." << std::endl;
    } else {
        std::cout << "Minimum number of coins needed: " << minCoins << std::endl;
    }

    return 0;
}
